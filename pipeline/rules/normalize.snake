'''rules to make normalized bedgraphs'''

import os
import glob

rule normalize:
  input:
     nocount = "results/bedgraph/{sample}.bg",
     count = "results/sorted_dedup_bam/{sample}.sorted.bam"
  output:
     "results/normalized_bg/{sample}.normalized.bg"
  params:
    job_name = "normalize",
    memory = "select[mem>40] rusage[mem=40]",
  log:
    "results/log/normalized_bg/{sample}.txt"
  threads:12

  shell:
    """
    awk \
        -v total=$(samtools view -c -F4 {input.count}) \
        '{{print$0"\t"($4/total)*100}}' {input.nocount} \
        > {output}
    """

rule mhv_normalize_pos:
  input:
     nocount = "results/mhv/bedgraph/{sample}.mhv.pos.bg",
     count = "results/sorted_dedup_bam/{sample}.sorted.bam"
  output:
     "results/mhv/normalized_bg/{sample}.mhv.pos.normalized.bg"
  params:
    job_name = "normalize",
    memory = "select[mem>30] rusage[mem=30]",
  log:
    "results/log/normalized_bg/mhv_pos/{sample}.txt"
  threads:12

  shell:
    """
    awk \
        -v total=$(samtools view -c -F4 {input.count}) \
        '{{print$0"\t"($4/total)*100}}' {input.nocount} \
        > {output}
    """

rule mhv_normalize_neg:
  input:
     nocount = "results/mhv/bedgraph/{sample}.mhv.neg.bg",
     count = "results/sorted_dedup_bam/{sample}.sorted.bam"
  output:
     "results/mhv/normalized_bg/{sample}.mhv.neg.normalized.bg"
  params:
    job_name = "normalize",
    memory = "select[mem>30] rusage[mem=30]",
  log:
    "results/log/normalized_bg/mhv_neg/log/{sample}.txt"
  threads:12

  shell:
    """
    awk \
        -v total=$(samtools view -c -F4 {input.count}) \
        '{{print$0"\t"($4/total)*100}}' {input.nocount} \
        > {output}
    """




